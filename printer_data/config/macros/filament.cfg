[gcode_macro M600]
description: Map M600 to CHANGE_FILAMENT
gcode:
    CHANGE_FILAMENT

#-------------------------#
#   CLEANING FILAMENT     #
#-------------------------#
[gcode_macro clean_filament_cold_pull]
description: Sparta3D Cleaning Filament Cold Pull, Thank you Vince
gcode:
## -- Set Extruder Temp
    {% set TEMP = params.TEMP|default(240)|float %}
## -- Resting Temp
    {% set REST_TEMP = params.REST_TEMP|default(50)|float %}
## -- Set Pulling Extruder Temp
    {% set PULL_TEMP = params.PULL_TEMP|default(130)|float %}

## --
    M109 S{TEMP}                ; Turn on Heaters
    M106 S128                   ; Part Cooling Fan
    RESPOND MSG="Pulling in filament."
    G1 E50 F2000                ; Pull in Filament 
    G1 E100 F150                ; Slow Extrude
    M400
    RESPOND MSG="Cooling down."
    M109 S{REST_TEMP}           ; Cooldown
    RESPOND MSG="Warming to pull temp."
    M109 S{PULL_TEMP}           ; Temp Set for pulling
    G4 P{2 * 60000}             ; Dwell for 2 min
    # BEEP I=3 DUR=100 FREQ=1000  ;Beeps lets you know it's ready
    RESPOND MSG="Ready to pull!"
    G4 P{1 * 60000}             ; Dwell for 1 min
    RESPOND MSG="Turning off hotend."
    M104 S0                     ; Turn Off Hotend
    G4 P{1 * 60000}             ; Dwell for 1 min
    M106 S0                     ; Turn Off Fans
## -//-

[gcode_macro CHANGE_FILAMENT]
description: Do a PAUSE, park the toolhead and unload the filament
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _CLIENT_VARIABLE"].default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(100)|float %}

    SAVE_GCODE_STATE NAME=CHANGE_FILAMENT_state
    PAUSE
    UNLOAD_FILAMENT TEMP={TEMP} DISTANCE={DISTANCE}
    RESTORE_GCODE_STATE NAME=CHANGE_FILAMENT_state

[gcode_macro UNLOAD_FILAMENT]
description: Basic unload of the filament (used with M600/CHANGE_FILAMENT)
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _CLIENT_VARIABLE"].default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(100)|float %}

    {% set filament_sensor = printer["gcode_macro _CLIENT_VARIABLE"].runout_sensor %}
    {% set filament_sensor_name = filament_sensor.split(" ")[1] %}
    {% set filament_sensor_enabled = printer[filament_sensor].enabled %}
    {% set re_enable_filament_sensor = 0 %}

    {% if filament_sensor_enabled %}
        {% if filament_sensor is defined and filament_sensor_enabled %}
            SET_FILAMENT_SENSOR SENSOR={filament_sensor_name} ENABLE=0
            {% set re_enable_filament_sensor = 1 %}
        {% endif %}
    {% endif %}

    RESPOND MSG="Unloading filament..."

    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT_state
    _LOW_TEMP_CHECK TEMP={TEMP}

    _TIP_SHAPING
    M83
    G1 E-20 F3600
    G4 P3000
    G1 E{DISTANCE|float * -1} F3000

    # Flushing Klipper's buffer to ensure the unload is done before continuing
    M400

    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT_state

    RESPOND MSG="Filament unload complete."

    {% if filament_sensor_enabled and re_enable_filament_sensor %}
        SET_FILAMENT_SENSOR SENSOR={filament_sensor_name} ENABLE=1
    {% endif %}

[gcode_macro LOAD_FILAMENT]
description: Basic load of the filament (used with M600/CHANGE_FILAMENT)
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _CLIENT_VARIABLE"].default_extruder_temp)|float %}
    {% set DISTANCE = params.DISTANCE|default(100)|float %}

    {% set filament_sensor = printer["gcode_macro _CLIENT_VARIABLE"].runout_sensor %}
    {% set filament_sensor_name = filament_sensor.split(" ")[1] %}
    {% set filament_sensor_enabled = printer[filament_sensor].enabled %}
    {% set re_enable_filament_sensor = 0 %}

    {% if filament_sensor_enabled %}
        {% if filament_sensor is defined and filament_sensor_enabled %}
            SET_FILAMENT_SENSOR SENSOR={filament_sensor_name} ENABLE=0
            {% set re_enable_filament_sensor = 1 %}
        {% endif %}
    {% endif %}

    RESPOND MSG="Loading filament..."

    SAVE_GCODE_STATE NAME=LOAD_FILAMENT_state
    _LOW_TEMP_CHECK TEMP={TEMP}
    M83
    G92 E0
    G1 E{DISTANCE} F200
    G1 E50 F150

    # Flushing Klipper's buffer to ensure the load is done before continuing
    M400

    G92 E0
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT_state

    RESPOND MSG="Filament load complete."

    {% if filament_sensor_enabled and re_enable_filament_sensor %}
        SET_FILAMENT_SENSOR SENSOR={filament_sensor_name} ENABLE=1
    {% endif %}

[gcode_macro _TIP_SHAPING]
description: Filament tip shaping sequence
gcode:
    {% set TEMP = params.TEMP|default(printer["gcode_macro _CLIENT_VARIABLE"].default_extruder_temp)|float %}

    {% set filament_sensor = printer["gcode_macro _CLIENT_VARIABLE"].runout_sensor %}
    {% set filament_sensor_name = filament_sensor.split(" ")[1] %}
    {% set filament_sensor_enabled = printer[filament_sensor].enabled %}
    {% set re_enable_filament_sensor = 0 %}

    {% if filament_sensor_enabled %}
        {% if filament_sensor is defined and filament_sensor_enabled %}
            SET_FILAMENT_SENSOR SENSOR={filament_sensor_name} ENABLE=0
            {% set re_enable_filament_sensor = 1 %}
        {% endif %}
    {% endif %}

    SAVE_GCODE_STATE NAME=TIP_SHAPING_state
    _LOW_TEMP_CHECK TEMP={TEMP}

    {% set old_pressure_advance = printer.extruder.pressure_advance|default(0) %} # old pressure advance
    # we suppress pressure advance
    SET_PRESSURE_ADVANCE ADVANCE=0

    M82
    G92 E0
    G1 E2 F3600
    G1 E0 F3600
    G1 E3 F3600
    G1 E0 F3600
    G1 E4 F3600
    G1 E0 F3600

    # set last pressure advance
    SET_PRESSURE_ADVANCE ADVANCE={old_pressure_advance}

    # Flushing Klipper's buffer to ensure the tip shaping sequence is done before continuing
    M400

    RESTORE_GCODE_STATE NAME=TIP_SHAPING_state

    {% if filament_sensor_enabled and re_enable_filament_sensor %}
        SET_FILAMENT_SENSOR SENSOR={filament_sensor_name} ENABLE=1
    {% endif %}

[gcode_macro _LOW_TEMP_CHECK]
description: Check the nozzle is at temperature and heat it if needed
gcode: 
    {% set TEMP = params.TEMP|default(printer["gcode_macro _CLIENT_VARIABLE"].default_extruder_temp)|float %}

    {% if printer.extruder.target != 0 %}
        {% if printer.extruder.temperature < printer.extruder.target %}
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %}
        {% if printer.extruder.target < TEMP %}
            M109 S{TEMP}
        {% endif %}
    {% endif %}